package com.onixx.androidexampleclean.domain.repository

import com.onixx.androidexampleclean.data.model.ExampleItemResponse
import com.onixx.androidexampleclean.domain.model.exampleItem.ExampleItem


/**
 * интерфейс, реализуемый в data слое. Нужен для того, чтобы жестко разделить слои домейна и даты.
 * Если проект будет состоять из нескольких модулей, это разделение дополнится ещё и зонами видимости.
 * Такая реализация - единственный вариант, при котором сохранится разделение по слоям
 *
 * Интерфейсы обычно связываются с одной сущностью, с которой работают, например этот интерфейс будет
 * работать с сущностью ExampleItem, и вся логика работы с беком должна идти через него
 *
 * suspend - проставляется для всех, т.к вся логика должна быть вынесена из главного потока. В нём
 * должна остаться только работа с UI частью
 */

interface ExampleItemsRepository {

    suspend fun getList(count: Int): List<ExampleItemResponse>

    /**
     * другие методы, например получить расширенную информацию или поменять какой-то статус на беке тоже обьявляются здесь.
     * Общее правило: одна сущность на беке = один репозиторий
     */

}